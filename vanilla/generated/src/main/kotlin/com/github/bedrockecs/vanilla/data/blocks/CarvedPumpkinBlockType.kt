// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class CarvedPumpkinBlockType private constructor(
    public override val runtimeID: Short,
    public val direction: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(direction: Int = this.direction): CarvedPumpkinBlockType {
        val e = CarvedPumpkinBlockType(0.toShort(), direction)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: CarvedPumpkinBlockType): Boolean {
        var ret = true
        ret = ret && (this.direction == other.direction)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:carved_pumpkin"

        public override val itemID: ItemID = ItemID(-155)

        private lateinit var instance988: CarvedPumpkinBlockType

        private lateinit var instance989: CarvedPumpkinBlockType

        private lateinit var instance990: CarvedPumpkinBlockType

        private lateinit var instance991: CarvedPumpkinBlockType

        init {
            init0()
        }

        public override val primary: CarvedPumpkinBlockType = instance988

        public override val allInstances: List<CarvedPumpkinBlockType> =
            listOf(instance988, instance989, instance990, instance991)

        public fun init0() {
            instance988 = CarvedPumpkinBlockType(988.toShort(), 0)
            instance989 = CarvedPumpkinBlockType(989.toShort(), 1)
            instance990 = CarvedPumpkinBlockType(990.toShort(), 2)
            instance991 = CarvedPumpkinBlockType(991.toShort(), 3)
        }
    }
}
