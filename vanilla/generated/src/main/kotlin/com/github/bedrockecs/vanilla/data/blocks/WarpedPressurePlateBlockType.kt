// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class WarpedPressurePlateBlockType private constructor(
    public override val runtimeID: Short,
    public val redstoneSignal: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(redstoneSignal: Int = this.redstoneSignal): WarpedPressurePlateBlockType {
        val e = WarpedPressurePlateBlockType(0.toShort(), redstoneSignal)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: WarpedPressurePlateBlockType): Boolean {
        var ret = true
        ret = ret && (this.redstoneSignal == other.redstoneSignal)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:warped_pressure_plate"

        public override val itemID: ItemID = ItemID(-263)

        private lateinit var instance7597: WarpedPressurePlateBlockType

        private lateinit var instance7598: WarpedPressurePlateBlockType

        private lateinit var instance7599: WarpedPressurePlateBlockType

        private lateinit var instance7600: WarpedPressurePlateBlockType

        private lateinit var instance7601: WarpedPressurePlateBlockType

        private lateinit var instance7602: WarpedPressurePlateBlockType

        private lateinit var instance7603: WarpedPressurePlateBlockType

        private lateinit var instance7604: WarpedPressurePlateBlockType

        private lateinit var instance7605: WarpedPressurePlateBlockType

        private lateinit var instance7606: WarpedPressurePlateBlockType

        private lateinit var instance7607: WarpedPressurePlateBlockType

        private lateinit var instance7608: WarpedPressurePlateBlockType

        private lateinit var instance7609: WarpedPressurePlateBlockType

        private lateinit var instance7610: WarpedPressurePlateBlockType

        private lateinit var instance7611: WarpedPressurePlateBlockType

        private lateinit var instance7612: WarpedPressurePlateBlockType

        init {
            init0()
        }

        public override val primary: WarpedPressurePlateBlockType = instance7597

        public override val allInstances: List<WarpedPressurePlateBlockType> =
            listOf(instance7597, instance7598, instance7599, instance7600, instance7601, instance7602, instance7603, instance7604, instance7605, instance7606, instance7607, instance7608, instance7609, instance7610, instance7611, instance7612)

        public fun init0() {
            instance7597 = WarpedPressurePlateBlockType(7597.toShort(), 0)
            instance7598 = WarpedPressurePlateBlockType(7598.toShort(), 1)
            instance7599 = WarpedPressurePlateBlockType(7599.toShort(), 2)
            instance7600 = WarpedPressurePlateBlockType(7600.toShort(), 3)
            instance7601 = WarpedPressurePlateBlockType(7601.toShort(), 4)
            instance7602 = WarpedPressurePlateBlockType(7602.toShort(), 5)
            instance7603 = WarpedPressurePlateBlockType(7603.toShort(), 6)
            instance7604 = WarpedPressurePlateBlockType(7604.toShort(), 7)
            instance7605 = WarpedPressurePlateBlockType(7605.toShort(), 8)
            instance7606 = WarpedPressurePlateBlockType(7606.toShort(), 9)
            instance7607 = WarpedPressurePlateBlockType(7607.toShort(), 10)
            instance7608 = WarpedPressurePlateBlockType(7608.toShort(), 11)
            instance7609 = WarpedPressurePlateBlockType(7609.toShort(), 12)
            instance7610 = WarpedPressurePlateBlockType(7610.toShort(), 13)
            instance7611 = WarpedPressurePlateBlockType(7611.toShort(), 14)
            instance7612 = WarpedPressurePlateBlockType(7612.toShort(), 15)
        }
    }
}
