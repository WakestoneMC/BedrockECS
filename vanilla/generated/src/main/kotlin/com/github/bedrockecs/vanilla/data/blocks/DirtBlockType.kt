// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class DirtBlockType private constructor(
    public override val runtimeID: Short,
    public val dirtType: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(dirtType: String = this.dirtType): DirtBlockType {
        val e = DirtBlockType(0.toShort(), dirtType)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: DirtBlockType): Boolean {
        var ret = true
        ret = ret && (this.dirtType == other.dirtType)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:dirt"

        public override val itemID: ItemID = ItemID(3)

        private lateinit var instance4484: DirtBlockType

        private lateinit var instance4485: DirtBlockType

        init {
            init0()
        }

        public override val primary: DirtBlockType = instance4484

        public override val allInstances: List<DirtBlockType> = listOf(instance4484, instance4485)

        public fun init0() {
            instance4484 = DirtBlockType(4484.toShort(), "normal")
            instance4485 = DirtBlockType(4485.toShort(), "coarse")
        }
    }
}
