// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class SandBlockType private constructor(
    public override val runtimeID: Short,
    public val sandType: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(sandType: String = this.sandType): SandBlockType {
        val e = SandBlockType(0.toShort(), sandType)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: SandBlockType): Boolean {
        var ret = true
        ret = ret && (this.sandType == other.sandType)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:sand"

        public override val itemID: ItemID = ItemID(12)

        private lateinit var instance6707: SandBlockType

        private lateinit var instance6708: SandBlockType

        init {
            init0()
        }

        public override val primary: SandBlockType = instance6707

        public override val allInstances: List<SandBlockType> = listOf(instance6707, instance6708)

        public fun init0() {
            instance6707 = SandBlockType(6707.toShort(), "normal")
            instance6708 = SandBlockType(6708.toShort(), "red")
        }
    }
}
