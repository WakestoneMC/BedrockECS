// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class WarpedStandingSignBlockType private constructor(
    public override val runtimeID: Short,
    public val groundSignDirection: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(groundSignDirection: Int = this.groundSignDirection):
        WarpedStandingSignBlockType {
        val e = WarpedStandingSignBlockType(0.toShort(), groundSignDirection)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: WarpedStandingSignBlockType): Boolean {
        var ret = true
        ret = ret && (this.groundSignDirection == other.groundSignDirection)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:warped_standing_sign"

        public override val itemID: ItemID = ItemID(-251)

        private lateinit var instance7624: WarpedStandingSignBlockType

        private lateinit var instance7625: WarpedStandingSignBlockType

        private lateinit var instance7626: WarpedStandingSignBlockType

        private lateinit var instance7627: WarpedStandingSignBlockType

        private lateinit var instance7628: WarpedStandingSignBlockType

        private lateinit var instance7629: WarpedStandingSignBlockType

        private lateinit var instance7630: WarpedStandingSignBlockType

        private lateinit var instance7631: WarpedStandingSignBlockType

        private lateinit var instance7632: WarpedStandingSignBlockType

        private lateinit var instance7633: WarpedStandingSignBlockType

        private lateinit var instance7634: WarpedStandingSignBlockType

        private lateinit var instance7635: WarpedStandingSignBlockType

        private lateinit var instance7636: WarpedStandingSignBlockType

        private lateinit var instance7637: WarpedStandingSignBlockType

        private lateinit var instance7638: WarpedStandingSignBlockType

        private lateinit var instance7639: WarpedStandingSignBlockType

        init {
            init0()
        }

        public override val primary: WarpedStandingSignBlockType = instance7624

        public override val allInstances: List<WarpedStandingSignBlockType> =
            listOf(instance7624, instance7625, instance7626, instance7627, instance7628, instance7629, instance7630, instance7631, instance7632, instance7633, instance7634, instance7635, instance7636, instance7637, instance7638, instance7639)

        public fun init0() {
            instance7624 = WarpedStandingSignBlockType(7624.toShort(), 0)
            instance7625 = WarpedStandingSignBlockType(7625.toShort(), 1)
            instance7626 = WarpedStandingSignBlockType(7626.toShort(), 2)
            instance7627 = WarpedStandingSignBlockType(7627.toShort(), 3)
            instance7628 = WarpedStandingSignBlockType(7628.toShort(), 4)
            instance7629 = WarpedStandingSignBlockType(7629.toShort(), 5)
            instance7630 = WarpedStandingSignBlockType(7630.toShort(), 6)
            instance7631 = WarpedStandingSignBlockType(7631.toShort(), 7)
            instance7632 = WarpedStandingSignBlockType(7632.toShort(), 8)
            instance7633 = WarpedStandingSignBlockType(7633.toShort(), 9)
            instance7634 = WarpedStandingSignBlockType(7634.toShort(), 10)
            instance7635 = WarpedStandingSignBlockType(7635.toShort(), 11)
            instance7636 = WarpedStandingSignBlockType(7636.toShort(), 12)
            instance7637 = WarpedStandingSignBlockType(7637.toShort(), 13)
            instance7638 = WarpedStandingSignBlockType(7638.toShort(), 14)
            instance7639 = WarpedStandingSignBlockType(7639.toShort(), 15)
        }
    }
}
