// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class LimeCandleCakeBlockType private constructor(
    public override val runtimeID: Short,
    public val lit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(lit: Byte = this.lit): LimeCandleCakeBlockType {
        val e = LimeCandleCakeBlockType(0.toShort(), lit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: LimeCandleCakeBlockType): Boolean {
        var ret = true
        ret = ret && (this.lit == other.lit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:lime_candle_cake"

        public override val itemID: ItemID = ItemID(-435)

        private lateinit var instance5531: LimeCandleCakeBlockType

        private lateinit var instance5532: LimeCandleCakeBlockType

        init {
            init0()
        }

        public override val primary: LimeCandleCakeBlockType = instance5531

        public override val allInstances: List<LimeCandleCakeBlockType> =
            listOf(instance5531, instance5532)

        public fun init0() {
            instance5531 = LimeCandleCakeBlockType(5531.toShort(), 0.toByte())
            instance5532 = LimeCandleCakeBlockType(5532.toShort(), 1.toByte())
        }
    }
}
