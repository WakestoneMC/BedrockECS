// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class FlowerPotBlockType private constructor(
    public override val runtimeID: Short,
    public val updateBit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(updateBit: Byte = this.updateBit): FlowerPotBlockType {
        val e = FlowerPotBlockType(0.toShort(), updateBit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: FlowerPotBlockType): Boolean {
        var ret = true
        ret = ret && (this.updateBit == other.updateBit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:flower_pot"

        public override val itemID: ItemID = ItemID(140)

        private lateinit var instance4813: FlowerPotBlockType

        private lateinit var instance4814: FlowerPotBlockType

        init {
            init0()
        }

        public override val primary: FlowerPotBlockType = instance4813

        public override val allInstances: List<FlowerPotBlockType> = listOf(instance4813, instance4814)

        public fun init0() {
            instance4813 = FlowerPotBlockType(4813.toShort(), 0.toByte())
            instance4814 = FlowerPotBlockType(4814.toShort(), 1.toByte())
        }
    }
}
