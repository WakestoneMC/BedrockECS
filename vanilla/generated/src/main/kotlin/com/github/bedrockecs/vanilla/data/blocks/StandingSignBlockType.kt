// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class StandingSignBlockType private constructor(
    public override val runtimeID: Short,
    public val groundSignDirection: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(groundSignDirection: Int = this.groundSignDirection): StandingSignBlockType {
        val e = StandingSignBlockType(0.toShort(), groundSignDirection)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: StandingSignBlockType): Boolean {
        var ret = true
        ret = ret && (this.groundSignDirection == other.groundSignDirection)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:standing_sign"

        public override val itemID: ItemID = ItemID(63)

        private lateinit var instance7149: StandingSignBlockType

        private lateinit var instance7150: StandingSignBlockType

        private lateinit var instance7151: StandingSignBlockType

        private lateinit var instance7152: StandingSignBlockType

        private lateinit var instance7153: StandingSignBlockType

        private lateinit var instance7154: StandingSignBlockType

        private lateinit var instance7155: StandingSignBlockType

        private lateinit var instance7156: StandingSignBlockType

        private lateinit var instance7157: StandingSignBlockType

        private lateinit var instance7158: StandingSignBlockType

        private lateinit var instance7159: StandingSignBlockType

        private lateinit var instance7160: StandingSignBlockType

        private lateinit var instance7161: StandingSignBlockType

        private lateinit var instance7162: StandingSignBlockType

        private lateinit var instance7163: StandingSignBlockType

        private lateinit var instance7164: StandingSignBlockType

        init {
            init0()
        }

        public override val primary: StandingSignBlockType = instance7149

        public override val allInstances: List<StandingSignBlockType> =
            listOf(instance7149, instance7150, instance7151, instance7152, instance7153, instance7154, instance7155, instance7156, instance7157, instance7158, instance7159, instance7160, instance7161, instance7162, instance7163, instance7164)

        public fun init0() {
            instance7149 = StandingSignBlockType(7149.toShort(), 0)
            instance7150 = StandingSignBlockType(7150.toShort(), 1)
            instance7151 = StandingSignBlockType(7151.toShort(), 2)
            instance7152 = StandingSignBlockType(7152.toShort(), 3)
            instance7153 = StandingSignBlockType(7153.toShort(), 4)
            instance7154 = StandingSignBlockType(7154.toShort(), 5)
            instance7155 = StandingSignBlockType(7155.toShort(), 6)
            instance7156 = StandingSignBlockType(7156.toShort(), 7)
            instance7157 = StandingSignBlockType(7157.toShort(), 8)
            instance7158 = StandingSignBlockType(7158.toShort(), 9)
            instance7159 = StandingSignBlockType(7159.toShort(), 10)
            instance7160 = StandingSignBlockType(7160.toShort(), 11)
            instance7161 = StandingSignBlockType(7161.toShort(), 12)
            instance7162 = StandingSignBlockType(7162.toShort(), 13)
            instance7163 = StandingSignBlockType(7163.toShort(), 14)
            instance7164 = StandingSignBlockType(7164.toShort(), 15)
        }
    }
}
