// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class StainedGlassPaneBlockType private constructor(
    public override val runtimeID: Short,
    public val color: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(color: String = this.color): StainedGlassPaneBlockType {
        val e = StainedGlassPaneBlockType(0.toShort(), color)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: StainedGlassPaneBlockType): Boolean {
        var ret = true
        ret = ret && (this.color == other.color)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:stained_glass_pane"

        public override val itemID: ItemID = ItemID(160)

        private lateinit var instance7101: StainedGlassPaneBlockType

        private lateinit var instance7102: StainedGlassPaneBlockType

        private lateinit var instance7103: StainedGlassPaneBlockType

        private lateinit var instance7104: StainedGlassPaneBlockType

        private lateinit var instance7105: StainedGlassPaneBlockType

        private lateinit var instance7106: StainedGlassPaneBlockType

        private lateinit var instance7107: StainedGlassPaneBlockType

        private lateinit var instance7108: StainedGlassPaneBlockType

        private lateinit var instance7109: StainedGlassPaneBlockType

        private lateinit var instance7110: StainedGlassPaneBlockType

        private lateinit var instance7111: StainedGlassPaneBlockType

        private lateinit var instance7112: StainedGlassPaneBlockType

        private lateinit var instance7113: StainedGlassPaneBlockType

        private lateinit var instance7114: StainedGlassPaneBlockType

        private lateinit var instance7115: StainedGlassPaneBlockType

        private lateinit var instance7116: StainedGlassPaneBlockType

        init {
            init0()
        }

        public override val primary: StainedGlassPaneBlockType = instance7101

        public override val allInstances: List<StainedGlassPaneBlockType> =
            listOf(instance7101, instance7102, instance7103, instance7104, instance7105, instance7106, instance7107, instance7108, instance7109, instance7110, instance7111, instance7112, instance7113, instance7114, instance7115, instance7116)

        public fun init0() {
            instance7101 = StainedGlassPaneBlockType(7101.toShort(), "white")
            instance7102 = StainedGlassPaneBlockType(7102.toShort(), "orange")
            instance7103 = StainedGlassPaneBlockType(7103.toShort(), "magenta")
            instance7104 = StainedGlassPaneBlockType(7104.toShort(), "light_blue")
            instance7105 = StainedGlassPaneBlockType(7105.toShort(), "yellow")
            instance7106 = StainedGlassPaneBlockType(7106.toShort(), "lime")
            instance7107 = StainedGlassPaneBlockType(7107.toShort(), "pink")
            instance7108 = StainedGlassPaneBlockType(7108.toShort(), "gray")
            instance7109 = StainedGlassPaneBlockType(7109.toShort(), "silver")
            instance7110 = StainedGlassPaneBlockType(7110.toShort(), "cyan")
            instance7111 = StainedGlassPaneBlockType(7111.toShort(), "purple")
            instance7112 = StainedGlassPaneBlockType(7112.toShort(), "blue")
            instance7113 = StainedGlassPaneBlockType(7113.toShort(), "brown")
            instance7114 = StainedGlassPaneBlockType(7114.toShort(), "green")
            instance7115 = StainedGlassPaneBlockType(7115.toShort(), "red")
            instance7116 = StainedGlassPaneBlockType(7116.toShort(), "black")
        }
    }
}
