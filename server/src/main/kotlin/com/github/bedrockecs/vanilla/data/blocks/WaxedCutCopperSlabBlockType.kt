// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class WaxedCutCopperSlabBlockType private constructor(
    public override val runtimeID: Short,
    public val topSlotBit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(topSlotBit: Byte = this.topSlotBit): WaxedCutCopperSlabBlockType {
        val e = WaxedCutCopperSlabBlockType(0.toShort(), topSlotBit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: WaxedCutCopperSlabBlockType): Boolean {
        var ret = true
        ret = ret && (this.topSlotBit == other.topSlotBit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:waxed_cut_copper_slab"

        public override val itemID: ItemID = ItemID(-365)

        private lateinit var instance7685: WaxedCutCopperSlabBlockType

        private lateinit var instance7686: WaxedCutCopperSlabBlockType

        init {
            init0()
        }

        public override val primary: WaxedCutCopperSlabBlockType = instance7685

        public override val allInstances: List<WaxedCutCopperSlabBlockType> =
            listOf(instance7685, instance7686)

        public fun init0() {
            instance7685 = WaxedCutCopperSlabBlockType(7685.toShort(), 0.toByte())
            instance7686 = WaxedCutCopperSlabBlockType(7686.toShort(), 1.toByte())
        }
    }
}
