// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class StrippedCrimsonHyphaeBlockType private constructor(
    public override val runtimeID: Short,
    public val pillarAxis: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(pillarAxis: String = this.pillarAxis): StrippedCrimsonHyphaeBlockType {
        val e = StrippedCrimsonHyphaeBlockType(0.toShort(), pillarAxis)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: StrippedCrimsonHyphaeBlockType): Boolean {
        var ret = true
        ret = ret && (this.pillarAxis == other.pillarAxis)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:stripped_crimson_hyphae"

        public override val itemID: ItemID = ItemID(-300)

        private lateinit var instance7304: StrippedCrimsonHyphaeBlockType

        private lateinit var instance7305: StrippedCrimsonHyphaeBlockType

        private lateinit var instance7306: StrippedCrimsonHyphaeBlockType

        init {
            init0()
        }

        public override val primary: StrippedCrimsonHyphaeBlockType = instance7304

        public override val allInstances: List<StrippedCrimsonHyphaeBlockType> =
            listOf(instance7304, instance7305, instance7306)

        public fun init0() {
            instance7304 = StrippedCrimsonHyphaeBlockType(7304.toShort(), "y")
            instance7305 = StrippedCrimsonHyphaeBlockType(7305.toShort(), "x")
            instance7306 = StrippedCrimsonHyphaeBlockType(7306.toShort(), "z")
        }
    }
}
