// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class AcaciaPressurePlateBlockType private constructor(
    public override val runtimeID: Short,
    public val redstoneSignal: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(redstoneSignal: Int = this.redstoneSignal): AcaciaPressurePlateBlockType {
        val e = AcaciaPressurePlateBlockType(0.toShort(), redstoneSignal)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: AcaciaPressurePlateBlockType): Boolean {
        var ret = true
        ret = ret && (this.redstoneSignal == other.redstoneSignal)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:acacia_pressure_plate"

        public override val itemID: ItemID = ItemID(-150)

        private lateinit var instance60: AcaciaPressurePlateBlockType

        private lateinit var instance61: AcaciaPressurePlateBlockType

        private lateinit var instance62: AcaciaPressurePlateBlockType

        private lateinit var instance63: AcaciaPressurePlateBlockType

        private lateinit var instance64: AcaciaPressurePlateBlockType

        private lateinit var instance65: AcaciaPressurePlateBlockType

        private lateinit var instance66: AcaciaPressurePlateBlockType

        private lateinit var instance67: AcaciaPressurePlateBlockType

        private lateinit var instance68: AcaciaPressurePlateBlockType

        private lateinit var instance69: AcaciaPressurePlateBlockType

        private lateinit var instance70: AcaciaPressurePlateBlockType

        private lateinit var instance71: AcaciaPressurePlateBlockType

        private lateinit var instance72: AcaciaPressurePlateBlockType

        private lateinit var instance73: AcaciaPressurePlateBlockType

        private lateinit var instance74: AcaciaPressurePlateBlockType

        private lateinit var instance75: AcaciaPressurePlateBlockType

        init {
            init0()
        }

        public override val primary: AcaciaPressurePlateBlockType = instance60

        public override val allInstances: List<AcaciaPressurePlateBlockType> =
            listOf(instance60, instance61, instance62, instance63, instance64, instance65, instance66, instance67, instance68, instance69, instance70, instance71, instance72, instance73, instance74, instance75)

        public fun init0() {
            instance60 = AcaciaPressurePlateBlockType(60.toShort(), 0)
            instance61 = AcaciaPressurePlateBlockType(61.toShort(), 1)
            instance62 = AcaciaPressurePlateBlockType(62.toShort(), 2)
            instance63 = AcaciaPressurePlateBlockType(63.toShort(), 3)
            instance64 = AcaciaPressurePlateBlockType(64.toShort(), 4)
            instance65 = AcaciaPressurePlateBlockType(65.toShort(), 5)
            instance66 = AcaciaPressurePlateBlockType(66.toShort(), 6)
            instance67 = AcaciaPressurePlateBlockType(67.toShort(), 7)
            instance68 = AcaciaPressurePlateBlockType(68.toShort(), 8)
            instance69 = AcaciaPressurePlateBlockType(69.toShort(), 9)
            instance70 = AcaciaPressurePlateBlockType(70.toShort(), 10)
            instance71 = AcaciaPressurePlateBlockType(71.toShort(), 11)
            instance72 = AcaciaPressurePlateBlockType(72.toShort(), 12)
            instance73 = AcaciaPressurePlateBlockType(73.toShort(), 13)
            instance74 = AcaciaPressurePlateBlockType(74.toShort(), 14)
            instance75 = AcaciaPressurePlateBlockType(75.toShort(), 15)
        }
    }
}
