// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class BlueCandleCakeBlockType private constructor(
    public override val runtimeID: Short,
    public val lit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(lit: Byte = this.lit): BlueCandleCakeBlockType {
        val e = BlueCandleCakeBlockType(0.toShort(), lit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: BlueCandleCakeBlockType): Boolean {
        var ret = true
        ret = ret && (this.lit == other.lit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:blue_candle_cake"

        public override val itemID: ItemID = ItemID(-441)

        private lateinit var instance683: BlueCandleCakeBlockType

        private lateinit var instance684: BlueCandleCakeBlockType

        init {
            init0()
        }

        public override val primary: BlueCandleCakeBlockType = instance683

        public override val allInstances: List<BlueCandleCakeBlockType> =
            listOf(instance683, instance684)

        public fun init0() {
            instance683 = BlueCandleCakeBlockType(683.toShort(), 0.toByte())
            instance684 = BlueCandleCakeBlockType(684.toShort(), 1.toByte())
        }
    }
}
