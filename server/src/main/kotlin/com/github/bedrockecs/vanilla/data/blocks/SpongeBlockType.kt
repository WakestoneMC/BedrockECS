// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class SpongeBlockType private constructor(
    public override val runtimeID: Short,
    public val spongeType: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(spongeType: String = this.spongeType): SpongeBlockType {
        val e = SpongeBlockType(0.toShort(), spongeType)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: SpongeBlockType): Boolean {
        var ret = true
        ret = ret && (this.spongeType == other.spongeType)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:sponge"

        public override val itemID: ItemID = ItemID(19)

        private lateinit var instance6960: SpongeBlockType

        private lateinit var instance6961: SpongeBlockType

        init {
            init0()
        }

        public override val primary: SpongeBlockType = instance6960

        public override val allInstances: List<SpongeBlockType> = listOf(instance6960, instance6961)

        public fun init0() {
            instance6960 = SpongeBlockType(6960.toShort(), "dry")
            instance6961 = SpongeBlockType(6961.toShort(), "wet")
        }
    }
}
