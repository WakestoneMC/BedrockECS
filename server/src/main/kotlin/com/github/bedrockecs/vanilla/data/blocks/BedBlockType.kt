// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class BedBlockType private constructor(
    public override val runtimeID: Short,
    public val direction: Int,
    public val headPieceBit: Byte,
    public val occupiedBit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(
        direction: Int = this.direction,
        headPieceBit: Byte = this.headPieceBit,
        occupiedBit: Byte = this.occupiedBit
    ): BedBlockType {
        val e = BedBlockType(0.toShort(), direction, headPieceBit, occupiedBit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: BedBlockType): Boolean {
        var ret = true
        ret = ret && (this.direction == other.direction)
        ret = ret && (this.headPieceBit == other.headPieceBit)
        ret = ret && (this.occupiedBit == other.occupiedBit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:bed"

        public override val itemID: ItemID = ItemID(26)

        private lateinit var instance218: BedBlockType

        private lateinit var instance219: BedBlockType

        private lateinit var instance220: BedBlockType

        private lateinit var instance221: BedBlockType

        private lateinit var instance222: BedBlockType

        private lateinit var instance223: BedBlockType

        private lateinit var instance224: BedBlockType

        private lateinit var instance225: BedBlockType

        private lateinit var instance226: BedBlockType

        private lateinit var instance227: BedBlockType

        private lateinit var instance228: BedBlockType

        private lateinit var instance229: BedBlockType

        private lateinit var instance230: BedBlockType

        private lateinit var instance231: BedBlockType

        private lateinit var instance232: BedBlockType

        private lateinit var instance233: BedBlockType

        init {
            init0()
        }

        public override val primary: BedBlockType = instance218

        public override val allInstances: List<BedBlockType> =
            listOf(instance218, instance219, instance220, instance221, instance222, instance223, instance224, instance225, instance226, instance227, instance228, instance229, instance230, instance231, instance232, instance233)

        public fun init0() {
            instance218 = BedBlockType(218.toShort(), 0, 0.toByte(), 0.toByte())
            instance219 = BedBlockType(219.toShort(), 1, 0.toByte(), 0.toByte())
            instance220 = BedBlockType(220.toShort(), 2, 0.toByte(), 0.toByte())
            instance221 = BedBlockType(221.toShort(), 3, 0.toByte(), 0.toByte())
            instance222 = BedBlockType(222.toShort(), 0, 0.toByte(), 1.toByte())
            instance223 = BedBlockType(223.toShort(), 1, 0.toByte(), 1.toByte())
            instance224 = BedBlockType(224.toShort(), 2, 0.toByte(), 1.toByte())
            instance225 = BedBlockType(225.toShort(), 3, 0.toByte(), 1.toByte())
            instance226 = BedBlockType(226.toShort(), 0, 1.toByte(), 0.toByte())
            instance227 = BedBlockType(227.toShort(), 1, 1.toByte(), 0.toByte())
            instance228 = BedBlockType(228.toShort(), 2, 1.toByte(), 0.toByte())
            instance229 = BedBlockType(229.toShort(), 3, 1.toByte(), 0.toByte())
            instance230 = BedBlockType(230.toShort(), 0, 1.toByte(), 1.toByte())
            instance231 = BedBlockType(231.toShort(), 1, 1.toByte(), 1.toByte())
            instance232 = BedBlockType(232.toShort(), 2, 1.toByte(), 1.toByte())
            instance233 = BedBlockType(233.toShort(), 3, 1.toByte(), 1.toByte())
        }
    }
}
