// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class ExposedDoubleCutCopperSlabBlockType private constructor(
    public override val runtimeID: Short,
    public val topSlotBit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(topSlotBit: Byte = this.topSlotBit): ExposedDoubleCutCopperSlabBlockType {
        val e = ExposedDoubleCutCopperSlabBlockType(0.toShort(), topSlotBit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: ExposedDoubleCutCopperSlabBlockType): Boolean {
        var ret = true
        ret = ret && (this.topSlotBit == other.topSlotBit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:exposed_double_cut_copper_slab"

        public override val itemID: ItemID = ItemID(-369)

        private lateinit var instance4764: ExposedDoubleCutCopperSlabBlockType

        private lateinit var instance4765: ExposedDoubleCutCopperSlabBlockType

        init {
            init0()
        }

        public override val primary: ExposedDoubleCutCopperSlabBlockType = instance4764

        public override val allInstances: List<ExposedDoubleCutCopperSlabBlockType> =
            listOf(instance4764, instance4765)

        public fun init0() {
            instance4764 = ExposedDoubleCutCopperSlabBlockType(4764.toShort(), 0.toByte())
            instance4765 = ExposedDoubleCutCopperSlabBlockType(4765.toShort(), 1.toByte())
        }
    }
}
