// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class RepeatingCommandBlockBlockType private constructor(
    public override val runtimeID: Short,
    public val conditionalBit: Byte,
    public val facingDirection: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(
        conditionalBit: Byte = this.conditionalBit,
        facingDirection: Int =
            this.facingDirection
    ): RepeatingCommandBlockBlockType {
        val e = RepeatingCommandBlockBlockType(0.toShort(), conditionalBit, facingDirection)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: RepeatingCommandBlockBlockType): Boolean {
        var ret = true
        ret = ret && (this.conditionalBit == other.conditionalBit)
        ret = ret && (this.facingDirection == other.facingDirection)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:repeating_command_block"

        public override val itemID: ItemID = ItemID(188)

        private lateinit var instance6689: RepeatingCommandBlockBlockType

        private lateinit var instance6690: RepeatingCommandBlockBlockType

        private lateinit var instance6691: RepeatingCommandBlockBlockType

        private lateinit var instance6692: RepeatingCommandBlockBlockType

        private lateinit var instance6693: RepeatingCommandBlockBlockType

        private lateinit var instance6694: RepeatingCommandBlockBlockType

        private lateinit var instance6695: RepeatingCommandBlockBlockType

        private lateinit var instance6696: RepeatingCommandBlockBlockType

        private lateinit var instance6697: RepeatingCommandBlockBlockType

        private lateinit var instance6698: RepeatingCommandBlockBlockType

        private lateinit var instance6699: RepeatingCommandBlockBlockType

        private lateinit var instance6700: RepeatingCommandBlockBlockType

        init {
            init0()
        }

        public override val primary: RepeatingCommandBlockBlockType = instance6689

        public override val allInstances: List<RepeatingCommandBlockBlockType> =
            listOf(instance6689, instance6690, instance6691, instance6692, instance6693, instance6694, instance6695, instance6696, instance6697, instance6698, instance6699, instance6700)

        public fun init0() {
            instance6689 = RepeatingCommandBlockBlockType(6689.toShort(), 0.toByte(), 0)
            instance6690 = RepeatingCommandBlockBlockType(6690.toShort(), 0.toByte(), 1)
            instance6691 = RepeatingCommandBlockBlockType(6691.toShort(), 0.toByte(), 2)
            instance6692 = RepeatingCommandBlockBlockType(6692.toShort(), 0.toByte(), 3)
            instance6693 = RepeatingCommandBlockBlockType(6693.toShort(), 0.toByte(), 4)
            instance6694 = RepeatingCommandBlockBlockType(6694.toShort(), 0.toByte(), 5)
            instance6695 = RepeatingCommandBlockBlockType(6695.toShort(), 1.toByte(), 0)
            instance6696 = RepeatingCommandBlockBlockType(6696.toShort(), 1.toByte(), 1)
            instance6697 = RepeatingCommandBlockBlockType(6697.toShort(), 1.toByte(), 2)
            instance6698 = RepeatingCommandBlockBlockType(6698.toShort(), 1.toByte(), 3)
            instance6699 = RepeatingCommandBlockBlockType(6699.toShort(), 1.toByte(), 4)
            instance6700 = RepeatingCommandBlockBlockType(6700.toShort(), 1.toByte(), 5)
        }
    }
}
