// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class StoneSlabBlockType private constructor(
    public override val runtimeID: Short,
    public val stoneSlabType: String,
    public val topSlotBit: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(stoneSlabType: String = this.stoneSlabType, topSlotBit: Byte = this.topSlotBit):
        StoneSlabBlockType {
        val e = StoneSlabBlockType(0.toShort(), stoneSlabType, topSlotBit)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: StoneSlabBlockType): Boolean {
        var ret = true
        ret = ret && (this.stoneSlabType == other.stoneSlabType)
        ret = ret && (this.topSlotBit == other.topSlotBit)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:stone_slab"

        public override val itemID: ItemID = ItemID(0)

        private lateinit var instance7220: StoneSlabBlockType

        private lateinit var instance7221: StoneSlabBlockType

        private lateinit var instance7222: StoneSlabBlockType

        private lateinit var instance7223: StoneSlabBlockType

        private lateinit var instance7224: StoneSlabBlockType

        private lateinit var instance7225: StoneSlabBlockType

        private lateinit var instance7226: StoneSlabBlockType

        private lateinit var instance7227: StoneSlabBlockType

        private lateinit var instance7228: StoneSlabBlockType

        private lateinit var instance7229: StoneSlabBlockType

        private lateinit var instance7230: StoneSlabBlockType

        private lateinit var instance7231: StoneSlabBlockType

        private lateinit var instance7232: StoneSlabBlockType

        private lateinit var instance7233: StoneSlabBlockType

        private lateinit var instance7234: StoneSlabBlockType

        private lateinit var instance7235: StoneSlabBlockType

        init {
            init0()
        }

        public override val primary: StoneSlabBlockType = instance7220

        public override val allInstances: List<StoneSlabBlockType> =
            listOf(instance7220, instance7221, instance7222, instance7223, instance7224, instance7225, instance7226, instance7227, instance7228, instance7229, instance7230, instance7231, instance7232, instance7233, instance7234, instance7235)

        public fun init0() {
            instance7220 = StoneSlabBlockType(7220.toShort(), "smooth_stone", 0.toByte())
            instance7221 = StoneSlabBlockType(7221.toShort(), "sandstone", 0.toByte())
            instance7222 = StoneSlabBlockType(7222.toShort(), "wood", 0.toByte())
            instance7223 = StoneSlabBlockType(7223.toShort(), "cobblestone", 0.toByte())
            instance7224 = StoneSlabBlockType(7224.toShort(), "brick", 0.toByte())
            instance7225 = StoneSlabBlockType(7225.toShort(), "stone_brick", 0.toByte())
            instance7226 = StoneSlabBlockType(7226.toShort(), "quartz", 0.toByte())
            instance7227 = StoneSlabBlockType(7227.toShort(), "nether_brick", 0.toByte())
            instance7228 = StoneSlabBlockType(7228.toShort(), "smooth_stone", 1.toByte())
            instance7229 = StoneSlabBlockType(7229.toShort(), "sandstone", 1.toByte())
            instance7230 = StoneSlabBlockType(7230.toShort(), "wood", 1.toByte())
            instance7231 = StoneSlabBlockType(7231.toShort(), "cobblestone", 1.toByte())
            instance7232 = StoneSlabBlockType(7232.toShort(), "brick", 1.toByte())
            instance7233 = StoneSlabBlockType(7233.toShort(), "stone_brick", 1.toByte())
            instance7234 = StoneSlabBlockType(7234.toShort(), "quartz", 1.toByte())
            instance7235 = StoneSlabBlockType(7235.toShort(), "nether_brick", 1.toByte())
        }
    }
}
