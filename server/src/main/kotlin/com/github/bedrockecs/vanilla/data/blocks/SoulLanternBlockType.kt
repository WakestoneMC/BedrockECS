// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Byte
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class SoulLanternBlockType private constructor(
    public override val runtimeID: Short,
    public val hanging: Byte
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(hanging: Byte = this.hanging): SoulLanternBlockType {
        val e = SoulLanternBlockType(0.toShort(), hanging)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: SoulLanternBlockType): Boolean {
        var ret = true
        ret = ret && (this.hanging == other.hanging)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:soul_lantern"

        public override val itemID: ItemID = ItemID(-269)

        private lateinit var instance6950: SoulLanternBlockType

        private lateinit var instance6951: SoulLanternBlockType

        init {
            init0()
        }

        public override val primary: SoulLanternBlockType = instance6950

        public override val allInstances: List<SoulLanternBlockType> = listOf(instance6950, instance6951)

        public fun init0() {
            instance6950 = SoulLanternBlockType(6950.toShort(), 0.toByte())
            instance6951 = SoulLanternBlockType(6951.toShort(), 1.toByte())
        }
    }
}
