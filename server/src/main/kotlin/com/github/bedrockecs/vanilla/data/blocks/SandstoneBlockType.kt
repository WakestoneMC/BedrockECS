// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class SandstoneBlockType private constructor(
    public override val runtimeID: Short,
    public val sandStoneType: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(sandStoneType: String = this.sandStoneType): SandstoneBlockType {
        val e = SandstoneBlockType(0.toShort(), sandStoneType)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: SandstoneBlockType): Boolean {
        var ret = true
        ret = ret && (this.sandStoneType == other.sandStoneType)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:sandstone"

        public override val itemID: ItemID = ItemID(24)

        private lateinit var instance6709: SandstoneBlockType

        private lateinit var instance6710: SandstoneBlockType

        private lateinit var instance6711: SandstoneBlockType

        private lateinit var instance6712: SandstoneBlockType

        init {
            init0()
        }

        public override val primary: SandstoneBlockType = instance6709

        public override val allInstances: List<SandstoneBlockType> =
            listOf(instance6709, instance6710, instance6711, instance6712)

        public fun init0() {
            instance6709 = SandstoneBlockType(6709.toShort(), "default")
            instance6710 = SandstoneBlockType(6710.toShort(), "heiroglyphs")
            instance6711 = SandstoneBlockType(6711.toShort(), "cut")
            instance6712 = SandstoneBlockType(6712.toShort(), "smooth")
        }
    }
}
