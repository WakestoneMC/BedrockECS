// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class SeagrassBlockType private constructor(
    public override val runtimeID: Short,
    public val seaGrassType: String
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(seaGrassType: String = this.seaGrassType): SeagrassBlockType {
        val e = SeagrassBlockType(0.toShort(), seaGrassType)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: SeagrassBlockType): Boolean {
        var ret = true
        ret = ret && (this.seaGrassType == other.seaGrassType)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:seagrass"

        public override val itemID: ItemID = ItemID(-130)

        private lateinit var instance6828: SeagrassBlockType

        private lateinit var instance6829: SeagrassBlockType

        private lateinit var instance6830: SeagrassBlockType

        init {
            init0()
        }

        public override val primary: SeagrassBlockType = instance6828

        public override val allInstances: List<SeagrassBlockType> =
            listOf(instance6828, instance6829, instance6830)

        public fun init0() {
            instance6828 = SeagrassBlockType(6828.toShort(), "default")
            instance6829 = SeagrassBlockType(6829.toShort(), "double_top")
            instance6830 = SeagrassBlockType(6830.toShort(), "double_bot")
        }
    }
}
