// generated by becs datacompiler, DO NOT EDIT!
package com.github.bedrockecs.vanilla.`data`.blocks

import com.github.bedrockecs.vanilla.`data`.items.ItemID
import kotlinx.serialization.Serializable
import kotlin.Boolean
import kotlin.Int
import kotlin.Short
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List

@Serializable
public data class StonePressurePlateBlockType private constructor(
    public override val runtimeID: Short,
    public val redstoneSignal: Int
) : VanillaBlockType {
    public override val blockType: String = Companion.blockType

    public fun with(redstoneSignal: Int = this.redstoneSignal): StonePressurePlateBlockType {
        val e = StonePressurePlateBlockType(0.toShort(), redstoneSignal)
        return allInstances.find { it.compareVariantProperties(e) }!!
    }

    @Suppress("UNUSED_PARAMETER")
    public fun compareVariantProperties(other: StonePressurePlateBlockType): Boolean {
        var ret = true
        ret = ret && (this.redstoneSignal == other.redstoneSignal)
        return ret
    }

    public companion object : VanillaBlockType.ICompanion {
        public override val blockType: String = "minecraft:stone_pressure_plate"

        public override val itemID: ItemID = ItemID(70)

        private lateinit var instance7204: StonePressurePlateBlockType

        private lateinit var instance7205: StonePressurePlateBlockType

        private lateinit var instance7206: StonePressurePlateBlockType

        private lateinit var instance7207: StonePressurePlateBlockType

        private lateinit var instance7208: StonePressurePlateBlockType

        private lateinit var instance7209: StonePressurePlateBlockType

        private lateinit var instance7210: StonePressurePlateBlockType

        private lateinit var instance7211: StonePressurePlateBlockType

        private lateinit var instance7212: StonePressurePlateBlockType

        private lateinit var instance7213: StonePressurePlateBlockType

        private lateinit var instance7214: StonePressurePlateBlockType

        private lateinit var instance7215: StonePressurePlateBlockType

        private lateinit var instance7216: StonePressurePlateBlockType

        private lateinit var instance7217: StonePressurePlateBlockType

        private lateinit var instance7218: StonePressurePlateBlockType

        private lateinit var instance7219: StonePressurePlateBlockType

        init {
            init0()
        }

        public override val primary: StonePressurePlateBlockType = instance7204

        public override val allInstances: List<StonePressurePlateBlockType> =
            listOf(instance7204, instance7205, instance7206, instance7207, instance7208, instance7209, instance7210, instance7211, instance7212, instance7213, instance7214, instance7215, instance7216, instance7217, instance7218, instance7219)

        public fun init0() {
            instance7204 = StonePressurePlateBlockType(7204.toShort(), 0)
            instance7205 = StonePressurePlateBlockType(7205.toShort(), 1)
            instance7206 = StonePressurePlateBlockType(7206.toShort(), 2)
            instance7207 = StonePressurePlateBlockType(7207.toShort(), 3)
            instance7208 = StonePressurePlateBlockType(7208.toShort(), 4)
            instance7209 = StonePressurePlateBlockType(7209.toShort(), 5)
            instance7210 = StonePressurePlateBlockType(7210.toShort(), 6)
            instance7211 = StonePressurePlateBlockType(7211.toShort(), 7)
            instance7212 = StonePressurePlateBlockType(7212.toShort(), 8)
            instance7213 = StonePressurePlateBlockType(7213.toShort(), 9)
            instance7214 = StonePressurePlateBlockType(7214.toShort(), 10)
            instance7215 = StonePressurePlateBlockType(7215.toShort(), 11)
            instance7216 = StonePressurePlateBlockType(7216.toShort(), 12)
            instance7217 = StonePressurePlateBlockType(7217.toShort(), 13)
            instance7218 = StonePressurePlateBlockType(7218.toShort(), 14)
            instance7219 = StonePressurePlateBlockType(7219.toShort(), 15)
        }
    }
}
